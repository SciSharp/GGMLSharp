A bin/Ckpt file is a zip file, so we can read it with System.IO.Compression.ZipFile.
In the file, we can get data.pkl, which is the header of the model, version file which is the version of the model or pickle version, and a folder of weights.
Data.pkl is a binary file, so we can read it as byte. Like most binary file, the struct of the file is sign + data.
For example, we can read somefile and get the sign and data like this:

6: X        BINUNICODE 'model.layers.24.self_attn.q_proj.weight'

"6" is the index of the stream
"X" is the type of data, that is from byte to char and means "BINUNICODE"
"model.layers.24.self_attn.q_proj.weight" is the data.


 0: \x80 PROTO      2
    2: }    EMPTY_DICT
    3: q    BINPUT     0
    5: (    MARK
    6: X        BINUNICODE 'model.layers.24.self_attn.q_proj.weight'
   50: q        BINPUT     1
   52: c        GLOBAL     'torch._utils _rebuild_tensor_v2'
   85: q        BINPUT     2
   87: (        MARK
   88: (            MARK
   89: X                BINUNICODE 'storage'
  101: q                BINPUT     3
  103: c                GLOBAL     'torch HalfStorage'
  122: q                BINPUT     4
  124: X                BINUNICODE '0'
  130: q                BINPUT     5
  132: X                BINUNICODE 'cpu'
  140: q                BINPUT     6
  142: J                BININT     16777216
  147: t                TUPLE      (MARK at 88)
  148: q            BINPUT     7
  150: Q            BINPERSID
  151: K            BININT1    0
  153: M            BININT2    4096
  156: M            BININT2    4096
  159: \x86         TUPLE2
  160: q            BINPUT     8
  162: M            BININT2    4096
  165: K            BININT1    1
  167: \x86         TUPLE2
  168: q            BINPUT     9
  170: \x89         NEWFALSE
  171: c            GLOBAL     'collections OrderedDict'
  196: q            BINPUT     10
  198: )            EMPTY_TUPLE
  199: R            REDUCE
  200: q            BINPUT     11
  202: t            TUPLE      (MARK at 87)
  203: q        BINPUT     12
  205: R        REDUCE
  206: q        BINPUT     13
  208: X        BINUNICODE 'model.layers.24.self_attn.k_proj.weight'
  252: q        BINPUT     14
  254: h        BINGET     2
  256: (        MARK
  257: (            MARK
  258: h                BINGET     3
  260: h                BINGET     4
  262: X                BINUNICODE '1'
  268: q                BINPUT     15
  270: h                BINGET     6
  272: J                BININT     16777216
  277: t                TUPLE      (MARK at 257)
  278: q            BINPUT     16
  280: Q            BINPERSID
  281: K            BININT1    0
  283: M            BININT2    4096
  286: M            BININT2    4096
  289: \x86         TUPLE2
  290: q            BINPUT     17
  292: M            BININT2    4096
  295: K            BININT1    1
  297: \x86         TUPLE2
  298: q            BINPUT     18
  300: \x89         NEWFALSE
  301: h            BINGET     10
  303: )            EMPTY_TUPLE
  304: R            REDUCE
  305: q            BINPUT     19
  307: t            TUPLE      (MARK at 256)
  308: q        BINPUT     20
  310: R        REDUCE
  311: q        BINPUT     21
  313: X        BINUNICODE 'model.layers.24.self_attn.v_proj.weight'

  ......
10115: r        LONG_BINPUT 685
10120: R        REDUCE
10121: r        LONG_BINPUT 686
10126: X        BINUNICODE 'lm_head.weight'
10145: r        LONG_BINPUT 687
10150: h        BINGET     2
10152: (        MARK
10153: (            MARK
10154: h                BINGET     3
10156: h                BINGET     4
10158: X                BINUNICODE '85'
10165: r                LONG_BINPUT 688
10170: h                BINGET     6
10172: J                BININT     131072000
10177: t                TUPLE      (MARK at 10153)
10178: r            LONG_BINPUT 689
10183: Q            BINPERSID
10184: K            BININT1    0
10186: M            BININT2    32000
10189: M            BININT2    4096
10192: \x86         TUPLE2
10193: r            LONG_BINPUT 690
10198: M            BININT2    4096
10201: K            BININT1    1
10203: \x86         TUPLE2
10204: r            LONG_BINPUT 691
10209: \x89         NEWFALSE
10210: h            BINGET     10
10212: )            EMPTY_TUPLE
10213: R            REDUCE
10214: r            LONG_BINPUT 692
10219: t            TUPLE      (MARK at 10152)
10220: r        LONG_BINPUT 693
10225: R        REDUCE
10226: r        LONG_BINPUT 694
10231: u        SETITEMS   (MARK at 5)
10232: .    STOP